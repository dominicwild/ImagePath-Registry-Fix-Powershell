$services = Get-ChildItem -path HKLM:\SYSTEM\CurrentControlSet\Services

#class ChangeLog {
#    
#    [string] $originalPath
#    [string] $newPath
#
#    ChangeLog([string]$originalPath,[string]$newPath){
#        $this.originalPath = $originalPath
#        $this.newPath = $newPath
#    }
#
#}

#$logData = @()

$fileString = (Get-Date -Format FileDateTimeUniversal).ToString() + "" + (Get-Random).toString() + ".log" 

function fixPath([string]$path){
    $path = $path.trim()
    if(!($path[0] -eq '"' -and $path[$path.Length-1] -eq '"')){
        $path = '"' + $path + '"' #Should check if quotes already exist
    }
    Write-Host "Path corrected" $path
    $path
}

function border(){
    Write-Host "================="
}

$imagePathServices = @()

$services | ForEach-Object {
    if($_.GetValueNames() -contains "ImagePath"){
        $imagePathServices += $_
    }
}


foreach($service in $imagePathServices){

    border

    $imagePath = Get-ItemPropertyValue -path $service.pspath -Name ImagePath
    Write-Host "Original Path:" $imagePath

    Select-String -Pattern '(.* .*\.[\w"]+)(.*)' -InputObject $imagePath |
        Foreach-Object {
            $path, $args = $_.Matches[0].Groups[1..2].Value
            Write-Host "path:" $path
            $fixedPath = fixPath($path)
            $imagePath = $path + $args

            #if($fixedPath -ne $path){
                
                #Set-ItemProperty -path $service.pspath -Name ImagePath -Value $imagePath -WhatIf
                $date = Get-Date
                $logData = "[" + $date + "]" + "`n Service: " + $services.pspath + "`n Original Path: " + $path + "`n Changed to: " + $fixedPath
                Add-Content -Path $fileString -Value $logData

                Write-Host 'New path set'
            #}
        }

    Write-Host 'The full path is:' $imagePath

    border
}

